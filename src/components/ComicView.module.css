/* Performance-optimized CSS for ComicView */

/* Base scene styles with GPU acceleration */
.scene {
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
    padding: 20px;
    background: linear-gradient(180deg, #0a0a0a 0%, #1a0f1f 100%);
    position: relative;
    overflow: hidden;
    animation: sceneEnter 0.6s ease-out;
    transform: translateZ(0);
    will-change: transform;
    backface-visibility: hidden;
    perspective: 1000px;
    contain: layout style paint;
}

@keyframes sceneEnter {
    from {
        opacity: 0;
        transform: translateZ(-100px);
    }
    to {
        opacity: 1;
        transform: translateZ(0);
    }
}

/* Atmospheric variations with reduced complexity */
.agentScene {
    background: radial-gradient(ellipse at center, #001122 0%, #000511 100%);
}

.memoryScene {
    background: linear-gradient(135deg, #1a0f1f 0%, #2a1a3a 50%, #0f0a1f 100%);
}

.choiceScene {
    background: linear-gradient(45deg, #0a0a0a 25%, #1a1a2a 50%, #0a0a0a 75%);
}

.oblivionScene {
    background: radial-gradient(circle at center, transparent 0%, #000000 100%);
}

/* Optimized particle system */
.particles {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
    contain: strict;
    transform: translateZ(0);
    will-change: transform;
}

.particle {
    position: absolute;
    width: 1px;
    height: 1px;
    background: #00ffff;
    contain: strict;
    transform: translateZ(0);
    opacity: 0.7;
    /* Removed expensive properties */
    /* border-radius: 50%; */
    /* will-change: transform, opacity; */
    /* box-shadow: 0 0 4px #00ffff; */
}

/* Ultra-simple glitch overlay - minimal performance impact */
.glitchOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    opacity: 0;
    background: repeating-linear-gradient(
        90deg,
        transparent,
        transparent 1px,
        rgba(255, 0, 64, 0.01) 1px,
        rgba(255, 0, 64, 0.01) 2px
    );
    contain: strict;
}

/* Disable glitch animation by default - only show on specific triggers */
.glitchOverlay.active {
    animation: safeGlitch 2s ease-out;
}

@keyframes safeGlitch {
    0%, 90%, 100% { 
        opacity: 0; 
    }
    95% { 
        opacity: 0.3; 
    }
}

/* Dialogue container - optimized */
.dialogueContainer {
    max-width: 900px;
    width: 100%;
    z-index: 10;
    contain: layout style;
}

/* Dialogue box with hardware acceleration */
.dialogueBox {
    background: linear-gradient(135deg, 
        rgba(0, 0, 0, 0.9) 0%, 
        rgba(10, 10, 10, 0.8) 100%);
    border: 1px solid #ff0040;
    padding: 30px;
    margin-bottom: 20px;
    border-radius: 5px;
    backdrop-filter: blur(10px);
    position: relative;
    box-shadow: 0 0 30px rgba(255, 0, 64, 0.2);
    contain: layout style;
    transform: translateZ(0);
    will-change: contents;
    max-height: 400px;
    overflow-y: auto;
    scrollbar-width: thin;
    scrollbar-color: #ff0040 transparent;
}

/* Dialogue lines - optimized rendering */
.dialogueLine {
    margin-bottom: 15px;
    opacity: 0;
    animation: simpleFadeIn 0.3s forwards;
    font-family: 'Courier New', monospace;
    line-height: 1.6;
    contain: layout style paint;
    transform: translateZ(0);
    will-change: opacity;
    isolation: isolate; /* Create stacking context */
    backface-visibility: hidden;
}

@keyframes simpleFadeIn {
    to { opacity: 1; }
}

.character {
    color: #ff0040;
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 2px;
    font-size: 14px;
    text-shadow: 0 0 8px rgba(255, 0, 64, 0.6);
    display: inline-block;
    margin-right: 10px;
    contain: layout style;
    transform: translateZ(0);
    backface-visibility: hidden;
}

.message {
    color: #e0e0e0;
    font-size: 16px;
    text-shadow: 0 0 3px rgba(255, 255, 255, 0.15);
    contain: layout style;
    transform: translateZ(0);
    backface-visibility: hidden;
}

/* Cursor animation - GPU optimized */
.cursor {
    display: inline-block;
    width: 10px;
    height: 20px;
    background: #00ffff;
    margin-left: 2px;
    animation: blink 1s steps(2) infinite;
    vertical-align: text-bottom;
    contain: strict;
    will-change: opacity;
}

@keyframes blink {
    0% { opacity: 1; }
}

/* Choices - simplified animations */
.choices {
    display: flex;
    flex-direction: column;
    gap: 15px;
    opacity: 0;
    animation: simpleFadeIn 0.5s forwards;
    contain: layout style;
}

.choiceButton {
    background: linear-gradient(90deg, 
        rgba(0, 10, 10, 0.9) 0%, 
        rgba(0, 20, 20, 0.8) 100%);
    color: #00ffff;
    border: 1px solid #00ffff;
    padding: 20px 25px;
    font-family: 'Courier New', monospace;
    font-size: 16px;
    cursor: pointer;
    text-align: left;
    transition: transform 0.15s ease, box-shadow 0.15s ease;
    text-shadow: 0 0 5px #00ffff;
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    gap: 15px;
    contain: layout style;
    transform: translateZ(0);
    will-change: transform;
}

.choiceButton:hover {
    transform: translateX(10px) translateZ(0);
    box-shadow: 0 0 20px rgba(0, 255, 255, 0.4);
}

.choiceButton:disabled {
    cursor: not-allowed;
    opacity: 0.5;
}

.choiceButton.selected {
    background: rgba(0, 255, 255, 0.3);
    transform: scale(1.02) translateZ(0);
    box-shadow: 0 0 30px rgba(0, 255, 255, 0.6);
}

.choiceButton.notSelected {
    opacity: 0.3;
    transform: scale(0.98) translateZ(0);
}

/* Choice glyph - reduced animation */
.choiceGlyph {
    font-size: 20px;
    color: #ff0040;
    text-shadow: 0 0 8px #ff0040;
}

.choiceText {
    flex: 1;
}

/* GIF Screen - performance optimized */
.gifScreen {
    width: 300px;
    height: 450px;
    border: 2px solid #ff0040;
    border-radius: 10px;
    overflow: hidden;
    position: relative;
    margin-bottom: 40px;
    background: #000;
    box-shadow: 0 0 30px rgba(255, 0, 64, 0.25);
    contain: strict;
    transform: translateZ(0);
}

.gifImage {
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: contrast(1.1) brightness(0.95);
    transform: translateZ(0);
    image-rendering: optimizeSpeed;
}

/* Scene indicator - simplified */
.sceneIndicator {
    position: absolute;
    top: 20px;
    right: 20px;
    display: flex;
    gap: 10px;
}

.indicatorDot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: #ff0040;
    opacity: 0.5;
    animation: pulse 2s ease-in-out infinite;
    contain: strict;
}

.indicatorDot:nth-child(2) { animation-delay: 0.66s; }
.indicatorDot:nth-child(3) { animation-delay: 1.33s; }

@keyframes pulse {
    0%, 100% { opacity: 0.5; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.2); }
}

/* Loading screen */
.loading {
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background: #000;
}

.loadingText {
    color: #00ffff;
    font-size: 24px;
    font-family: 'Courier New', monospace;
    text-shadow: 0 0 15px #00ffff;
    animation: loadingPulse 1.5s ease-in-out infinite;
}

@keyframes loadingPulse {
    0%, 100% { opacity: 0.5; }
    50% { opacity: 1; }
}

/* Performance indicator for development */
.performanceIndicator {
    position: fixed;
    bottom: 20px;
    right: 20px;
    padding: 10px;
    background: rgba(0, 0, 0, 0.8);
    border: 1px solid #00ffff;
    border-radius: 5px;
    color: #00ffff;
    font-family: 'Courier New', monospace;
    font-size: 12px;
    display: flex;
    flex-direction: column;
    gap: 5px;
    z-index: 9999;
}

/* Fade in utility */
.fadeIn {
    animation: simpleFadeIn 0.3s forwards;
}

/* Performance profiles - more conservative */
.lowPerformance {
    animation: none !important;
}

.lowPerformance * {
    animation: none !important;
    transition: none !important;
    filter: none !important;
    box-shadow: none !important;
    text-shadow: none !important;
    backdrop-filter: none !important;
    will-change: auto !important;
}

.lowPerformance .particle {
    display: none !important;
}

.lowPerformance .glitchOverlay {
    display: none !important;
}

.lowPerformance .particles {
    display: none !important;
}

.mediumPerformance * {
    animation-duration: 1s !important;
}

.mediumPerformance .particle:nth-child(n+10) {
    display: none;
}

.mediumPerformance .glitchOverlay {
    animation-duration: 4s !important;
}

.highPerformance {
    /* All effects enabled */
}

/* Scrollbar styling */
.dialogueBox::-webkit-scrollbar {
    width: 6px;
}

.dialogueBox::-webkit-scrollbar-track {
    background: transparent;
}

.dialogueBox::-webkit-scrollbar-thumb {
    background: rgba(255, 0, 64, 0.5);
    border-radius: 3px;
}

/* Mobile optimizations */
@media (max-width: 768px) {
    .scene {
        padding: 15px;
    }
    
    .dialogueBox {
        padding: 20px;
        max-height: 300px;
    }
    
    .character {
        font-size: 12px;
    }
    
    .message {
        font-size: 14px;
    }
    
    .choiceButton {
        padding: 15px 20px;
        font-size: 14px;
    }
    
    .gifScreen {
        width: 250px;
        height: 375px;
        margin-bottom: 30px;
    }
    
    .memoryImage {
        max-width: 95%;
        max-height: 80%;
    }
    
    .nodeTitle {
        font-size: 1.8rem;
    }
    
    .nodeSubtitle {
        font-size: 1rem;
    }
    
    .nodeFooter {
        font-size: 1.4rem;
    }
    
    /* Reduce particles on mobile */
    .particle:nth-child(n+10) {
        display: none;
    }
    
    .memoryFragment:nth-child(n+5) {
        display: none;
    }
    
    .nostalgicParticle:nth-child(n+8) {
        display: none;
    }
    
    /* Disable complex animations on mobile */
    * {
        animation-duration: 0.3s !important;
    }
    
    /* Reduce chaos effects on mobile */
    .chaosImageContainer:nth-child(n+3) {
        display: none;
    }
    
    .entropyFragment:nth-child(n+10) {
        display: none;
    }
    
    .chaosStormImage:nth-child(n+5) {
        display: none;
    }
    
    .screenTear:nth-child(n+8) {
        display: none;
    }
    
    .errorMessage {
        font-size: 1.5rem;
    }
}

/* Node Selection Effects */
.nodeSelectionScene {
    background: radial-gradient(ellipse at center, #2a1a0a 0%, #0a0a0a 60%, #000000 100%);
    position: relative;
}

.nodeSelectionOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
}

.choiceMatrix {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
        linear-gradient(90deg, transparent 0%, rgba(255, 140, 0, 0.1) 50%, transparent 100%),
        linear-gradient(0deg, transparent 0%, rgba(255, 140, 0, 0.1) 50%, transparent 100%);
    background-size: 50px 50px;
    animation: matrixPulse 3s ease-in-out infinite;
}

@keyframes matrixPulse {
    0%, 100% { opacity: 0.3; transform: scale(1); }
    50% { opacity: 0.7; transform: scale(1.02); }
}

.decisionChains {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.decisionChain {
    position: absolute;
    width: 2px;
    height: 100%;
    background: linear-gradient(to bottom, 
        transparent 0%, 
        rgba(255, 140, 0, 0.8) 20%, 
        rgba(255, 100, 0, 0.6) 50%, 
        rgba(255, 140, 0, 0.8) 80%, 
        transparent 100%);
    animation: chainFlow 4s linear infinite;
    transform-origin: top;
}

@keyframes chainFlow {
    0% { transform: translateY(-100%) scaleY(0); opacity: 0; }
    20% { transform: translateY(0%) scaleY(1); opacity: 1; }
    80% { transform: translateY(0%) scaleY(1); opacity: 1; }
    100% { transform: translateY(100%) scaleY(0); opacity: 0; }
}

.silhouetteEffect {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 200px;
    height: 300px;
    transform: translate(-50%, -60%);
    background: radial-gradient(ellipse at center, rgba(0, 0, 0, 0.9) 0%, transparent 70%);
    border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
    animation: silhouettePulse 2s ease-in-out infinite;
}

@keyframes silhouettePulse {
    0%, 100% { opacity: 0.6; transform: translate(-50%, -60%) scale(1); }
    50% { opacity: 0.9; transform: translate(-50%, -60%) scale(1.05); }
}

.pastEchoes {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.pastEcho {
    position: absolute;
    width: 80px;
    height: 80px;
    background: radial-gradient(circle, rgba(255, 140, 0, 0.3) 0%, transparent 70%);
    border-radius: 50%;
    animation: echoRipple 3s ease-out infinite;
    right: 10%;
}

@keyframes echoRipple {
    0% { transform: scale(0); opacity: 1; }
    70% { transform: scale(1.5); opacity: 0.3; }
    100% { transform: scale(2); opacity: 0; }
}

.determinismWaves {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at 30% 70%, rgba(255, 100, 0, 0.2) 0%, transparent 50%),
                radial-gradient(circle at 70% 30%, rgba(255, 140, 0, 0.2) 0%, transparent 50%);
    animation: wavesFlow 5s ease-in-out infinite;
}

@keyframes wavesFlow {
    0%, 100% { opacity: 0.4; transform: rotate(0deg); }
    50% { opacity: 0.8; transform: rotate(5deg); }
}

.choiceIllusionParticle {
    position: absolute;
    width: 3px;
    height: 3px;
    background: rgba(255, 140, 0, 0.8);
    border-radius: 50%;
    animation: illusionFloat 4s linear infinite;
}

@keyframes illusionFloat {
    0% { transform: translateY(100vh) scale(0); opacity: 0; }
    10% { transform: translateY(90vh) scale(1); opacity: 1; }
    90% { transform: translateY(10vh) scale(1); opacity: 1; }
    100% { transform: translateY(0vh) scale(0); opacity: 0; }
}

/* Node Choice Image Overlay */
.nodeChoiceImage {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 2;
    background: linear-gradient(180deg, rgba(0, 0, 0, 0.7) 0%, rgba(42, 26, 10, 0.8) 50%, rgba(0, 0, 0, 0.9) 100%);
}

.nodeChoiceText {
    text-align: center;
    color: #ff8c00;
    font-family: 'Courier New', monospace;
    text-shadow: 0 0 10px rgba(255, 140, 0, 0.5);
    animation: textGlow 2s ease-in-out infinite alternate;
    z-index: 3;
}

.nodeTitle {
    font-size: 2.5rem;
    font-weight: bold;
    margin-bottom: 1rem;
    letter-spacing: 0.1em;
}

.nodeSubtitle {
    font-size: 1.2rem;
    margin-bottom: 2rem;
    opacity: 0.9;
}

.nodeFooter {
    font-size: 1.8rem;
    color: #ff6600;
    margin-bottom: 0.5rem;
    font-weight: bold;
}

.nodeFooterSub {
    font-size: 1rem;
    color: #ffaa66;
    opacity: 0.8;
}

@keyframes textGlow {
    from { text-shadow: 0 0 10px rgba(255, 140, 0, 0.5); }
    to { text-shadow: 0 0 20px rgba(255, 140, 0, 0.8), 0 0 30px rgba(255, 100, 0, 0.3); }
}

.humanSilhouette {
    position: absolute;
    bottom: 10%;
    left: 50%;
    width: 180px;
    height: 250px;
    transform: translateX(-50%);
    background: radial-gradient(ellipse at 50% 20%, rgba(0, 0, 0, 0.9) 0%, rgba(0, 0, 0, 0.7) 40%, transparent 70%);
    border-radius: 50% 50% 20% 20%;
    animation: silhouetteBreathing 3s ease-in-out infinite;
}

.humanSilhouette::before {
    content: '';
    position: absolute;
    top: -15%;
    left: 50%;
    width: 60px;
    height: 80px;
    transform: translateX(-50%);
    background: radial-gradient(ellipse, rgba(0, 0, 0, 0.9) 0%, transparent 70%);
    border-radius: 50%;
}

@keyframes silhouetteBreathing {
    0%, 100% { transform: translateX(-50%) scale(1); opacity: 0.8; }
    50% { transform: translateX(-50%) scale(1.02); opacity: 0.9; }
}

/* Memory Node Effects */
.memoryNodeScene {
    background: radial-gradient(ellipse at center, #1a0f2a 0%, #0f0520 60%, #000000 100%);
    position: relative;
}

.memoryNodeImage {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 2;
}

.memoryImage {
    max-width: 90%;
    max-height: 90%;
    object-fit: contain;
    border-radius: 10px;
    box-shadow: 0 0 30px rgba(138, 43, 226, 0.4);
    animation: memoryImagePulse 3s ease-in-out infinite;
    filter: sepia(20%) hue-rotate(260deg) saturate(1.2);
}

@keyframes memoryImagePulse {
    0%, 100% { 
        transform: scale(1); 
        box-shadow: 0 0 30px rgba(138, 43, 226, 0.4); 
    }
    50% { 
        transform: scale(1.02); 
        box-shadow: 0 0 50px rgba(138, 43, 226, 0.6), 0 0 80px rgba(75, 0, 130, 0.3); 
    }
}

.memoryOverlayEffects {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at center, transparent 0%, rgba(138, 43, 226, 0.1) 70%, transparent 100%);
    animation: memoryOverlayShimmer 4s ease-in-out infinite;
    pointer-events: none;
}

@keyframes memoryOverlayShimmer {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.7; }
}

.memoryNodeOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
}

.memoryFragments {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.memoryFragment {
    position: absolute;
    width: 40px;
    height: 40px;
    background: radial-gradient(circle, rgba(138, 43, 226, 0.6) 0%, transparent 70%);
    border-radius: 4px;
    animation: fragmentFloat 6s ease-in-out infinite;
    transform-origin: center;
}

@keyframes fragmentFloat {
    0%, 100% { 
        transform: translateY(0) rotate(0deg) scale(1); 
        opacity: 0.7; 
    }
    25% { 
        transform: translateY(-20px) rotate(90deg) scale(1.1); 
        opacity: 1; 
    }
    50% { 
        transform: translateY(-10px) rotate(180deg) scale(0.9); 
        opacity: 0.8; 
    }
    75% { 
        transform: translateY(-30px) rotate(270deg) scale(1.2); 
        opacity: 0.9; 
    }
}

.temporalDistortion {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
        radial-gradient(ellipse at 20% 30%, rgba(75, 0, 130, 0.2) 0%, transparent 50%),
        radial-gradient(ellipse at 80% 70%, rgba(138, 43, 226, 0.2) 0%, transparent 50%),
        radial-gradient(ellipse at 50% 50%, rgba(147, 0, 211, 0.1) 0%, transparent 60%);
    animation: temporalWarp 8s ease-in-out infinite;
}

@keyframes temporalWarp {
    0%, 100% { 
        transform: scale(1) rotate(0deg); 
        opacity: 0.6; 
    }
    33% { 
        transform: scale(1.05) rotate(2deg); 
        opacity: 0.8; 
    }
    66% { 
        transform: scale(0.95) rotate(-2deg); 
        opacity: 0.7; 
    }
}

.memoryWaves {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    transform: translate(-50%, -50%);
}

.memoryWave {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100px;
    height: 100px;
    transform: translate(-50%, -50%);
    border: 2px solid rgba(138, 43, 226, 0.4);
    border-radius: 50%;
    animation: memoryWaveExpand 5s linear infinite;
}

@keyframes memoryWaveExpand {
    0% { 
        width: 100px; 
        height: 100px; 
        opacity: 1; 
        border-width: 2px; 
    }
    100% { 
        width: 600px; 
        height: 600px; 
        opacity: 0; 
        border-width: 0px; 
    }
}

.nostalgicParticle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: rgba(138, 43, 226, 0.8);
    border-radius: 50%;
    animation: nostalgicDrift 8s linear infinite;
    box-shadow: 0 0 6px rgba(138, 43, 226, 0.6);
}

@keyframes nostalgicDrift {
    0% { 
        transform: translateY(100vh) scale(0) rotate(0deg); 
        opacity: 0; 
    }
    10% { 
        transform: translateY(90vh) scale(1) rotate(45deg); 
        opacity: 1; 
    }
    50% { 
        transform: translateY(50vh) scale(1.2) rotate(180deg); 
        opacity: 0.8; 
    }
    90% { 
        transform: translateY(10vh) scale(0.8) rotate(315deg); 
        opacity: 0.6; 
    }
    100% { 
        transform: translateY(0vh) scale(0) rotate(360deg); 
        opacity: 0; 
    }
}

.memoryEcho {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, 
        transparent 0%, 
        rgba(138, 43, 226, 0.1) 25%, 
        transparent 50%, 
        rgba(75, 0, 130, 0.1) 75%, 
        transparent 100%);
    background-size: 200px 200px;
    animation: memoryEchoFlow 6s linear infinite;
}

@keyframes memoryEchoFlow {
    0% { 
        background-position: -200px -200px; 
        opacity: 0.3; 
    }
    50% { 
        background-position: 100px 100px; 
        opacity: 0.6; 
    }
    100% { 
        background-position: 400px 400px; 
        opacity: 0.3; 
    }
}

/* Chaos Image Overlay for Random Fill */
.chaosImageOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
    opacity: 0.6;
}

.chaosImageContainer {
    position: absolute;
    width: 150px;
    height: 150px;
    animation: chaosFloat 4s ease-in-out infinite;
    filter: blur(1px) brightness(0.7) contrast(1.3);
}

@keyframes chaosFloat {
    0%, 100% { 
        transform: translateY(0) rotate(0deg) scale(1); 
        opacity: 0.3; 
    }
    25% { 
        transform: translateY(-20px) rotate(90deg) scale(1.1); 
        opacity: 0.6; 
    }
    50% { 
        transform: translateY(-10px) rotate(180deg) scale(0.8); 
        opacity: 0.4; 
    }
    75% { 
        transform: translateY(-30px) rotate(270deg) scale(1.2); 
        opacity: 0.7; 
    }
}

.chaosImage {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 8px;
    animation: chaosGlitch 2s linear infinite;
}

@keyframes chaosGlitch {
    0%, 90%, 100% { transform: translateX(0); }
    10% { transform: translateX(-2px); }
    20% { transform: translateX(2px); }
    30% { transform: translateX(-1px); }
    40% { transform: translateX(1px); }
    50% { transform: translateX(-3px); }
    60% { transform: translateX(3px); }
}

/* Entropy Annihilation Scene */
.entropyScene {
    background: radial-gradient(circle at center, #ff0000 0%, #000000 30%, #ff0000 60%, #000000 100%);
    animation: entropyPulse 0.1s linear infinite;
}

@keyframes entropyPulse {
    0% { background-color: #000000; }
    25% { background-color: #ff0000; }
    50% { background-color: #000000; }
    75% { background-color: #ffffff; }
    100% { background-color: #000000; }
}

.entropyAnnihilationOverlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
    z-index: 9999;
    mix-blend-mode: difference;
}

.criticalGlitchMatrix {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
        repeating-linear-gradient(
            0deg,
            transparent,
            transparent 2px,
            rgba(255, 0, 0, 0.5) 2px,
            rgba(255, 0, 0, 0.5) 4px
        ),
        repeating-linear-gradient(
            90deg,
            transparent,
            transparent 2px,
            rgba(0, 255, 0, 0.5) 2px,
            rgba(0, 255, 0, 0.5) 4px
        );
    animation: criticalGlitch 0.05s linear infinite;
}

@keyframes criticalGlitch {
    0% { transform: translate(0, 0) rotate(0deg); opacity: 0.8; }
    10% { transform: translate(-5px, 2px) rotate(1deg); opacity: 1; }
    20% { transform: translate(3px, -4px) rotate(-1deg); opacity: 0.9; }
    30% { transform: translate(-2px, 5px) rotate(2deg); opacity: 0.7; }
    40% { transform: translate(4px, -1px) rotate(-2deg); opacity: 1; }
    50% { transform: translate(-3px, 3px) rotate(1deg); opacity: 0.8; }
    60% { transform: translate(2px, -5px) rotate(-1deg); opacity: 0.9; }
    70% { transform: translate(-4px, 1px) rotate(2deg); opacity: 1; }
    80% { transform: translate(5px, -2px) rotate(-2deg); opacity: 0.7; }
    90% { transform: translate(-1px, 4px) rotate(1deg); opacity: 0.9; }
    100% { transform: translate(0, 0) rotate(0deg); opacity: 0.8; }
}

.realityCollapse {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 200%;
    height: 200%;
    transform: translate(-50%, -50%);
    background: radial-gradient(circle, transparent 0%, rgba(0, 0, 0, 0.9) 50%, rgba(255, 0, 0, 0.8) 100%);
    animation: collapseReality 1s ease-out infinite;
}

@keyframes collapseReality {
    0% { transform: translate(-50%, -50%) scale(0); opacity: 0; }
    50% { transform: translate(-50%, -50%) scale(1.5); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(3); opacity: 0; }
}

.entropyCascade {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.entropyFragment {
    position: absolute;
    width: 20px;
    height: 20px;
    background: rgba(255, 0, 0, 0.8);
    animation: entropyFall 0.5s linear infinite;
}

@keyframes entropyFall {
    0% { 
        transform: translateY(-100vh) rotate(0deg) scale(1); 
        opacity: 1; 
        background: rgba(255, 0, 0, 0.8); 
    }
    25% { 
        transform: translateY(-50vh) rotate(90deg) scale(1.5); 
        opacity: 0.8; 
        background: rgba(0, 255, 0, 0.8); 
    }
    50% { 
        transform: translateY(0vh) rotate(180deg) scale(0.5); 
        opacity: 0.6; 
        background: rgba(0, 0, 255, 0.8); 
    }
    75% { 
        transform: translateY(50vh) rotate(270deg) scale(2); 
        opacity: 0.4; 
        background: rgba(255, 255, 0, 0.8); 
    }
    100% { 
        transform: translateY(100vh) rotate(360deg) scale(0); 
        opacity: 0; 
        background: rgba(255, 255, 255, 0.8); 
    }
}

.systemCorruption {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, 
        transparent 0%, 
        rgba(255, 0, 0, 0.3) 25%, 
        transparent 50%, 
        rgba(0, 0, 255, 0.3) 75%, 
        transparent 100%);
    background-size: 50px 50px;
    animation: corruptionWave 0.2s linear infinite;
}

@keyframes corruptionWave {
    0% { background-position: 0 0; }
    100% { background-position: 50px 50px; }
}

.finalDissolution {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
        radial-gradient(circle at 10% 20%, rgba(255, 255, 255, 0.8) 0%, transparent 20%),
        radial-gradient(circle at 90% 30%, rgba(255, 0, 0, 0.8) 0%, transparent 20%),
        radial-gradient(circle at 30% 80%, rgba(0, 255, 0, 0.8) 0%, transparent 20%),
        radial-gradient(circle at 70% 70%, rgba(0, 0, 255, 0.8) 0%, transparent 20%);
    animation: dissolution 0.3s ease-in-out infinite;
}

@keyframes dissolution {
    0%, 100% { opacity: 0; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.1); }
}

.chaosStorm {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.chaosStormImage {
    position: absolute;
    width: 100px;
    height: 100px;
    animation: chaosStormSpin 0.5s linear infinite;
}

.chaosStormImageElement {
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: blur(2px) brightness(2) contrast(3) saturate(5);
    mix-blend-mode: screen;
}

@keyframes chaosStormSpin {
    0% { 
        transform: rotate(0deg) scale(0.5); 
        opacity: 0.5; 
    }
    25% { 
        transform: rotate(90deg) scale(1.5); 
        opacity: 1; 
    }
    50% { 
        transform: rotate(180deg) scale(0.2); 
        opacity: 0.3; 
    }
    75% { 
        transform: rotate(270deg) scale(2); 
        opacity: 0.8; 
    }
    100% { 
        transform: rotate(360deg) scale(0.5); 
        opacity: 0.5; 
    }
}

.screenTear {
    position: absolute;
    top: 0;
    width: 5px;
    height: 100%;
    background: linear-gradient(to bottom, 
        transparent 0%, 
        rgba(255, 0, 0, 0.9) 20%, 
        rgba(0, 255, 0, 0.9) 40%, 
        rgba(0, 0, 255, 0.9) 60%, 
        rgba(255, 255, 255, 0.9) 80%, 
        transparent 100%);
    animation: screenTearGlitch 0.1s linear infinite;
}

@keyframes screenTearGlitch {
    0% { transform: translateX(0) scaleY(1); }
    10% { transform: translateX(-10px) scaleY(1.5); }
    20% { transform: translateX(10px) scaleY(0.5); }
    30% { transform: translateX(-5px) scaleY(2); }
    40% { transform: translateX(15px) scaleY(0.2); }
    50% { transform: translateX(-15px) scaleY(1.8); }
    60% { transform: translateX(5px) scaleY(0.3); }
    70% { transform: translateX(-20px) scaleY(1.2); }
    80% { transform: translateX(20px) scaleY(0.8); }
    90% { transform: translateX(-8px) scaleY(1.6); }
    100% { transform: translateX(0) scaleY(1); }
}

.criticalErrorOverlay {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    z-index: 10000;
    font-family: 'Courier New', monospace;
    font-weight: bold;
    animation: errorFlash 0.2s linear infinite;
}

.errorMessage {
    font-size: 2rem;
    color: #ff0000;
    text-shadow: 0 0 10px #ff0000, 0 0 20px #ff0000, 0 0 30px #ff0000;
    margin: 10px 0;
    animation: errorTextGlitch 0.1s linear infinite;
}

@keyframes errorFlash {
    0%, 50% { opacity: 1; }
    25%, 75% { opacity: 0; }
}

@keyframes errorTextGlitch {
    0%, 90%, 100% { transform: translate(0, 0); }
    10% { transform: translate(-2px, 1px); }
    20% { transform: translate(2px, -1px); }
    30% { transform: translate(-1px, 2px); }
    40% { transform: translate(1px, -2px); }
    50% { transform: translate(-3px, 1px); }
    60% { transform: translate(3px, -1px); }
    70% { transform: translate(-1px, 3px); }
    80% { transform: translate(1px, -3px); }
}

/* Reduce motion for accessibility */
@media (prefers-reduced-motion: reduce) {
    * {
        animation: none !important;
        transition: none !important;
    }
}