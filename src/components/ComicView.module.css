/* Base scene styles */
.scene {
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
    padding: 20px;
    background: linear-gradient(180deg, #0a0a0a 0%, #1a0f1f 100%);
    position: relative;
    overflow: hidden;
    animation: sceneEnter 1s ease-out;
}

@keyframes sceneEnter {
    from {
        opacity: 0;
        filter: blur(10px);
    }
    to {
        opacity: 1;
        filter: blur(0);
    }
}

/* Atmospheric scene variations */
.agentScene {
    background: radial-gradient(ellipse at center, #001122 0%, #000511 50%, #000000 100%);
    animation: agentPulse 4s infinite;
}

@keyframes agentPulse {
    0%, 100% { filter: brightness(1) hue-rotate(0deg); }
    50% { filter: brightness(1.2) hue-rotate(10deg); }
}

.memoryScene {
    background: linear-gradient(135deg, #1a0f1f 0%, #2a1a3a 50%, #0f0a1f 100%);
    filter: sepia(0.2);
}

.choiceScene {
    background: conic-gradient(from 180deg at 50% 50%, #0a0a0a, #1a1a2a, #0a0a0a);
    animation: choiceRotate 20s linear infinite;
}

@keyframes choiceRotate {
    from { filter: hue-rotate(0deg); }
    to { filter: hue-rotate(360deg); }
}

.oblivionScene {
    background: radial-gradient(circle at center, transparent 0%, #000000 100%);
    animation: oblivionFade 3s infinite alternate;
}

@keyframes oblivionFade {
    from { opacity: 0.8; }
    to { opacity: 1; }
}

/* Particle effects - performance optimized */
.particles {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
    contain: layout style; /* Prevent layout recalculation */
    transform: translateZ(0); /* Force GPU layer */
    will-change: transform;
}

.particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: #00ffff;
    border-radius: 50%;
    opacity: 0;
    animation: floatUp linear infinite;
    box-shadow: 0 0 10px #00ffff;
    contain: layout style;
    transform: translateZ(0); /* Individual GPU acceleration */
    will-change: transform, opacity; /* Optimize for animation properties */
}

@keyframes floatUp {
    0% {
        opacity: 0;
        transform: translateY(100vh) translateX(0) translateZ(0);
    }
    10% {
        opacity: 1;
        transform: translateY(90vh) translateX(10px) translateZ(0);
    }
    90% {
        opacity: 1;
        transform: translateY(-90vh) translateX(90px) translateZ(0);
    }
    100% {
        opacity: 0;
        transform: translateY(-100vh) translateX(100px) translateZ(0);
    }
}

/* Glitch overlay effect */
.glitchOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    opacity: 0;
    animation: glitch 10s infinite;
    background: repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        rgba(255, 0, 64, 0.03) 2px,
        rgba(255, 0, 64, 0.03) 4px
    );
}

@keyframes glitch {
    0%, 90%, 100% {
        opacity: 0;
    }
    92% {
        opacity: 1;
        transform: translateX(-5px);
    }
    94% {
        opacity: 1;
        transform: translateX(5px);
    }
    96% {
        opacity: 1;
        transform: translateX(-2px);
    }
}

/* Dialogue container */
.dialogueContainer {
    max-width: 900px;
    width: 100%;
    z-index: 10;
}

/* Dialogue box - performance optimized */
.dialogueBox {
    background: linear-gradient(135deg, 
        rgba(0, 0, 0, 0.9) 0%, 
        rgba(10, 10, 10, 0.8) 50%, 
        rgba(0, 0, 0, 0.9) 100%);
    border: 1px solid;
    border-image: linear-gradient(45deg, #ff0040, #00ffff, #ff0040) 1;
    padding: 30px;
    margin-bottom: 20px;
    border-radius: 5px;
    backdrop-filter: blur(10px);
    position: relative;
    box-shadow: 
        0 0 50px rgba(255, 0, 64, 0.2),
        inset 0 0 30px rgba(0, 255, 255, 0.05);
    animation: dialogueGlow 3s infinite alternate;
    contain: layout style;
    transform: translateZ(0);
    /* Virtual scrolling container properties */
    max-height: 400px;
    overflow-y: auto;
    scroll-behavior: smooth;
    /* Custom scrollbar for cyberpunk theme */
    scrollbar-width: thin;
    scrollbar-color: #ff0040 rgba(0, 0, 0, 0.3);
}

@keyframes dialogueGlow {
    from {
        box-shadow: 
            0 0 50px rgba(255, 0, 64, 0.2),
            inset 0 0 30px rgba(0, 255, 255, 0.05);
    }
    to {
        box-shadow: 
            0 0 70px rgba(255, 0, 64, 0.3),
            inset 0 0 40px rgba(0, 255, 255, 0.1);
    }
}

/* Dialogue lines - optimized for performance */
.dialogueLine {
    margin-bottom: 15px;
    opacity: 0;
    animation: fadeIn 0.5s forwards;
    font-family: 'Courier New', monospace;
    line-height: 1.6;
    contain: layout style; /* CSS containment for performance */
    transform: translateZ(0); /* Force hardware acceleration */
    backface-visibility: hidden; /* Prevent flickering */
}

.character {
    color: #ff0040;
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 2px;
    font-size: 14px;
    text-shadow: 0 0 10px rgba(255, 0, 64, 0.8);
    display: inline-block;
    margin-right: 10px;
    contain: layout style; /* Prevent layout recalculation */
    will-change: auto; /* Don't over-optimize static text */
}

.message {
    color: #e0e0e0;
    font-size: 16px;
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.2);
    contain: layout style;
    will-change: contents; /* Optimize for text changes during typing */
}

/* Typing cursor - GPU accelerated */
.cursor {
    display: inline-block;
    width: 10px;
    height: 20px;
    background: #00ffff;
    margin-left: 2px;
    animation: blink 1s infinite;
    vertical-align: text-bottom;
    transform: translateZ(0); /* Force GPU layer */
    will-change: opacity; /* Optimize for blinking animation */
    contain: layout style;
}

@keyframes blink {
    0%, 49% { 
        opacity: 1; 
        transform: translateZ(0); 
    }
    50%, 100% { 
        opacity: 0; 
        transform: translateZ(0); 
    }
}

/* Choices - performance optimized */
.choices {
    display: flex;
    flex-direction: column;
    gap: 15px;
    opacity: 0;
    animation: fadeIn 1s forwards;
    contain: layout style;
    transform: translateZ(0);
}

.choiceButton {
    background: linear-gradient(90deg, 
        rgba(0, 10, 10, 0.9) 0%, 
        rgba(0, 20, 20, 0.8) 50%, 
        rgba(0, 10, 10, 0.9) 100%);
    color: #00ffff;
    border: 1px solid #00ffff;
    padding: 20px 25px;
    font-family: 'Courier New', monospace;
    font-size: 16px;
    cursor: pointer;
    text-align: left;
    transition: transform 0.2s ease, box-shadow 0.2s ease; /* Reduced transitions for performance */
    text-shadow: 0 0 5px #00ffff;
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    gap: 15px;
    contain: layout style;
    transform: translateZ(0); /* Hardware acceleration */
    backface-visibility: hidden;
}

.choiceButton::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
        transparent, 
        rgba(0, 255, 255, 0.2), 
        transparent);
    transition: left 0.5s;
}

.choiceButton:hover::before {
    left: 100%;
}

.choiceButton:hover {
    background: linear-gradient(90deg, 
        rgba(0, 255, 255, 0.1) 0%, 
        rgba(0, 255, 255, 0.2) 50%, 
        rgba(0, 255, 255, 0.1) 100%);
    border-color: #00ffff;
    color: #ffffff;
    transform: translateX(10px) translateZ(0); /* GPU accelerated transform */
    box-shadow: 
        0 0 30px rgba(0, 255, 255, 0.5),
        inset 0 0 20px rgba(0, 255, 255, 0.1);
}

.choiceButton:disabled {
    cursor: not-allowed;
    opacity: 0.5;
}

.choiceButton.selected {
    background: linear-gradient(90deg, 
        rgba(0, 255, 255, 0.3) 0%, 
        rgba(0, 255, 255, 0.4) 50%, 
        rgba(0, 255, 255, 0.3) 100%);
    border-color: #00ffff;
    color: #ffffff;
    animation: selectedPulse 0.5s;
    box-shadow: 
        0 0 50px rgba(0, 255, 255, 0.8),
        inset 0 0 30px rgba(0, 255, 255, 0.3);
}

.choiceButton.notSelected {
    opacity: 0.3;
    transform: scale(0.95);
}

@keyframes selectedPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

/* Choice glyph */
.choiceGlyph {
    font-size: 20px;
    color: #ff0040;
    text-shadow: 0 0 10px #ff0040;
    animation: glyphRotate 2s linear infinite;
}

@keyframes glyphRotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

.choiceText {
    flex: 1;
}

/* Scene indicator */
.sceneIndicator {
    position: absolute;
    top: 20px;
    right: 20px;
    display: flex;
    gap: 10px;
}

.indicatorDot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: #ff0040;
    opacity: 0.3;
    animation: indicatorPulse 2s infinite;
}

.indicatorDot:nth-child(1) {
    animation-delay: 0s;
}

.indicatorDot:nth-child(2) {
    animation-delay: 0.5s;
}

.indicatorDot:nth-child(3) {
    animation-delay: 1s;
}

@keyframes indicatorPulse {
    0%, 100% { 
        opacity: 0.3; 
        transform: scale(1);
    }
    50% { 
        opacity: 1; 
        transform: scale(1.5);
    }
}

/* Loading screen */
.loading {
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background: #000;
}

.loadingText {
    color: #00ffff;
    font-size: 24px;
    font-family: 'Courier New', monospace;
    text-shadow: 0 0 20px #00ffff;
    animation: loadingPulse 1s infinite;
}

@keyframes loadingPulse {
    0%, 100% { opacity: 0.5; }
    50% { opacity: 1; }
}

/* Fade in animation */
.fadeIn {
    animation: fadeIn 0.5s forwards;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px) translateZ(0);
    }
    to {
        opacity: 1;
        transform: translateY(0) translateZ(0);
    }
}

/* Mobile responsiveness */
@media (max-width: 768px) {
    .dialogueBox {
        padding: 20px;
    }
    
    .character {
        font-size: 12px;
        letter-spacing: 1px;
    }
    
    .message {
        font-size: 14px;
    }
    
    .choiceButton {
        padding: 15px 20px;
        font-size: 14px;
    }
    
    .choiceGlyph {
        font-size: 16px;
    }
}

/* GIF Screen - performance optimized */
.gifScreen {
    width: 300px;
    height: 450px;
    border: 2px solid;
    border-image: linear-gradient(45deg, #ff0040, #00ffff, #ff0040) 1;
    border-radius: 10px;
    overflow: hidden;
    position: relative;
    margin-bottom: 40px;
    background: #000;
    box-shadow: 
        0 0 50px rgba(255, 0, 64, 0.3),
        0 0 100px rgba(0, 255, 255, 0.2),
        inset 0 0 20px rgba(0, 0, 0, 0.8);
    animation: screenGlow 4s infinite alternate;
    contain: layout style;
    transform: translateZ(0);
    will-change: transform;
}

@keyframes screenGlow {
    from {
        box-shadow: 
            0 0 50px rgba(255, 0, 64, 0.3),
            0 0 100px rgba(0, 255, 255, 0.2),
            inset 0 0 20px rgba(0, 0, 0, 0.8);
    }
    to {
        box-shadow: 
            0 0 70px rgba(255, 0, 64, 0.5),
            0 0 120px rgba(0, 255, 255, 0.3),
            inset 0 0 30px rgba(0, 0, 0, 0.9);
    }
}

.gifScreen::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        0deg,
        transparent 98%,
        rgba(0, 255, 255, 0.1) 100%
    );
    pointer-events: none;
    z-index: 2;
    animation: scanlines 2s linear infinite;
}

@keyframes scanlines {
    0% { transform: translateY(-100%); }
    100% { transform: translateY(100vh); }
}

.gifImage {
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: 
        contrast(1.1) 
        brightness(0.9) 
        saturate(1.2)
        hue-rotate(10deg);
    animation: staticFlicker 0.1s infinite;
    transform: translateZ(0); /* GPU acceleration for video/gif */
    will-change: filter; /* Optimize for filter animations */
    image-rendering: optimizeSpeed; /* Prioritize performance over quality for animations */
}

@keyframes staticFlicker {
    0% { filter: contrast(1.1) brightness(0.9) saturate(1.2) hue-rotate(10deg); }
    2% { filter: contrast(1.3) brightness(1.1) saturate(1.4) hue-rotate(15deg); }
    4% { filter: contrast(1.1) brightness(0.9) saturate(1.2) hue-rotate(10deg); }
}

/* Electrical Scene Effects */
.electricalOverlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    z-index: 1;
}

.electricSparks {
    position: absolute;
    width: 2px;
    height: 20px;
    background: linear-gradient(180deg, #00ffff, transparent);
    animation: electricSpark 0.1s infinite;
    box-shadow: 0 0 10px #00ffff;
}

.electricSparks:nth-child(odd) {
    animation-delay: 0.05s;
    background: linear-gradient(180deg, #ffff00, transparent);
    box-shadow: 0 0 10px #ffff00;
}

@keyframes electricSpark {
    0% { 
        opacity: 1; 
        transform: scaleY(1);
    }
    50% { 
        opacity: 0.7; 
        transform: scaleY(1.5);
    }
    100% { 
        opacity: 0.3; 
        transform: scaleY(0.8);
    }
}

.electricPulse {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at var(--pulse-x, 50%) var(--pulse-y, 50%), 
        rgba(0, 255, 255, 0.1) 0%, 
        rgba(255, 255, 0, 0.05) 30%, 
        transparent 70%);
    animation: electricPulse 2s infinite;
}

@keyframes electricPulse {
    0%, 100% { 
        opacity: 0; 
        transform: scale(0.5);
    }
    50% { 
        opacity: 1; 
        transform: scale(1.2);
    }
}

.circuitLines {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
        linear-gradient(90deg, transparent 48%, rgba(0, 255, 255, 0.1) 49%, rgba(0, 255, 255, 0.1) 51%, transparent 52%),
        linear-gradient(0deg, transparent 48%, rgba(0, 255, 255, 0.1) 49%, rgba(0, 255, 255, 0.1) 51%, transparent 52%);
    background-size: 80px 60px;
    animation: circuitFlow 3s infinite linear;
}

@keyframes circuitFlow {
    0% { background-position: 0 0; }
    100% { background-position: 80px 60px; }
}

/* Mirror/Reflection Scene Effects */
.mirrorOverlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    z-index: 1;
    overflow: hidden;
}

.mirrorFragment {
    position: absolute;
    border: 1px solid rgba(255, 255, 255, 0.3);
    background: linear-gradient(45deg, 
        rgba(255, 255, 255, 0.05), 
        rgba(0, 255, 255, 0.1), 
        rgba(255, 0, 64, 0.05));
    backdrop-filter: blur(2px);
    animation: mirrorFloat 4s infinite ease-in-out;
    transform-origin: center;
}

.mirrorFragment:nth-child(1) { 
    width: 80px; height: 120px; 
    top: 20%; left: 10%; 
    animation-delay: 0s;
    transform: rotate(15deg);
}
.mirrorFragment:nth-child(2) { 
    width: 60px; height: 90px; 
    top: 60%; right: 15%; 
    animation-delay: 0.8s;
    transform: rotate(-20deg);
}
.mirrorFragment:nth-child(3) { 
    width: 70px; height: 100px; 
    top: 40%; left: 70%; 
    animation-delay: 1.2s;
    transform: rotate(10deg);
}
.mirrorFragment:nth-child(4) { 
    width: 50px; height: 80px; 
    bottom: 20%; left: 30%; 
    animation-delay: 2s;
    transform: rotate(-30deg);
}

@keyframes mirrorFloat {
    0%, 100% { 
        transform: rotate(var(--rotation, 0deg)) translateY(0px) scale(1);
        opacity: 0.4;
    }
    25% { 
        transform: rotate(calc(var(--rotation, 0deg) + 5deg)) translateY(-10px) scale(1.05);
        opacity: 0.7;
    }
    50% { 
        transform: rotate(calc(var(--rotation, 0deg) + 2deg)) translateY(-5px) scale(0.95);
        opacity: 0.8;
    }
    75% { 
        transform: rotate(calc(var(--rotation, 0deg) - 3deg)) translateY(-15px) scale(1.02);
        opacity: 0.6;
    }
}

.reflectionRipple {
    position: absolute;
    border: 2px solid rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    animation: rippleExpand 3s infinite;
}

.reflectionRipple:nth-child(5) {
    width: 40px; height: 40px;
    top: 30%; left: 20%;
    animation-delay: 0s;
}
.reflectionRipple:nth-child(6) {
    width: 60px; height: 60px;
    top: 70%; right: 25%;
    animation-delay: 1s;
}
.reflectionRipple:nth-child(7) {
    width: 35px; height: 35px;
    bottom: 40%; left: 60%;
    animation-delay: 2s;
}

@keyframes rippleExpand {
    0% { 
        transform: scale(0);
        opacity: 1;
        border-color: rgba(255, 255, 255, 0.8);
    }
    50% { 
        transform: scale(2);
        opacity: 0.5;
        border-color: rgba(0, 255, 255, 0.4);
    }
    100% { 
        transform: scale(4);
        opacity: 0;
        border-color: rgba(255, 0, 64, 0.1);
    }
}

.identityShatter {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
        radial-gradient(circle at 25% 30%, rgba(255, 255, 255, 0.1) 0%, transparent 3%),
        radial-gradient(circle at 75% 20%, rgba(0, 255, 255, 0.1) 0%, transparent 3%),
        radial-gradient(circle at 40% 80%, rgba(255, 0, 64, 0.1) 0%, transparent 3%),
        radial-gradient(circle at 80% 70%, rgba(255, 255, 255, 0.08) 0%, transparent 3%);
    animation: identityFlicker 2s infinite;
}

@keyframes identityFlicker {
    0%, 100% { opacity: 0.3; }
    25% { opacity: 0.7; }
    50% { opacity: 0.5; }
    75% { opacity: 0.8; }
}

/* Mobile mirror effects */
@media (max-width: 768px) {
    .gifScreen {
        width: 250px;
        height: 375px;
        margin-bottom: 30px;
    }
    
    .electricSparks {
        width: 1px;
        height: 15px;
    }
    
    .circuitLines {
        background-size: 60px 45px;
    }
    
    .mirrorFragment {
        transform: scale(0.8);
    }
    
    .reflectionRipple {
        transform: scale(0.7);
    }
}

/* NECHTO/Void Scene Effects - Aggressive */
.voidOverlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    z-index: 2;
    overflow: hidden;
}

.geometryGlitch {
    position: absolute;
    border: 2px solid;
    border-image: linear-gradient(45deg, #ff0040, #00ffff, #ff0040) 1;
    background: rgba(0, 0, 0, 0.3);
    animation: geometryTwist 1.5s infinite;
}

.geometryGlitch:nth-child(1) { 
    width: 100px; height: 60px; 
    top: 15%; left: 20%; 
    clip-path: polygon(0% 0%, 80% 20%, 100% 100%, 20% 80%);
    animation-delay: 0s;
}
.geometryGlitch:nth-child(2) { 
    width: 80px; height: 80px; 
    top: 50%; right: 25%; 
    clip-path: polygon(30% 0%, 100% 30%, 70% 100%, 0% 70%);
    animation-delay: 0.3s;
}
.geometryGlitch:nth-child(3) { 
    width: 120px; height: 40px; 
    bottom: 30%; left: 60%; 
    clip-path: polygon(0% 0%, 100% 0%, 90% 100%, 10% 100%);
    animation-delay: 0.7s;
}

@keyframes geometryTwist {
    0% { 
        transform: rotate(0deg) scale(1);
        border-color: #ff0040;
        filter: hue-rotate(0deg) brightness(1);
    }
    25% { 
        transform: rotate(90deg) scale(1.1);
        border-color: #00ffff;
        filter: hue-rotate(90deg) brightness(1.5);
    }
    50% { 
        transform: rotate(180deg) scale(0.9);
        border-color: #ff0040;
        filter: hue-rotate(180deg) brightness(0.8);
    }
    75% { 
        transform: rotate(270deg) scale(1.2);
        border-color: #00ffff;
        filter: hue-rotate(270deg) brightness(1.3);
    }
    100% { 
        transform: rotate(360deg) scale(1);
        border-color: #ff0040;
        filter: hue-rotate(360deg) brightness(1);
    }
}

.digitalFlesh {
    position: absolute;
    width: 6px;
    height: 6px;
    background: #ff0040;
    animation: fleshPulse 0.8s infinite;
    border-radius: 1px;
}

.digitalFlesh:nth-child(odd) {
    background: #00ffff;
    animation-duration: 0.6s;
}

@keyframes fleshPulse {
    0%, 100% { 
        transform: scale(1);
        opacity: 0.8;
        box-shadow: 0 0 5px currentColor;
    }
    50% { 
        transform: scale(2.5);
        opacity: 1;
        box-shadow: 0 0 15px currentColor, 0 0 25px currentColor;
    }
}

.realityTear {
    position: absolute;
    width: 3px;
    height: 100%;
    background: linear-gradient(180deg, 
        transparent, 
        #ff0040 20%, 
        #00ffff 50%, 
        #ff0040 80%, 
        transparent);
    animation: realityRip 2s infinite;
    filter: blur(1px);
}

.realityTear:nth-child(n+10):nth-child(-n+15) {
    animation-delay: 0.2s;
    left: 25%;
}
.realityTear:nth-child(n+16):nth-child(-n+20) {
    animation-delay: 0.5s;
    left: 50%;
}
.realityTear:nth-child(n+21):nth-child(-n+25) {
    animation-delay: 0.8s;
    left: 75%;
}

@keyframes realityRip {
    0%, 100% { 
        opacity: 0;
        transform: scaleX(1);
    }
    10% { 
        opacity: 1;
        transform: scaleX(3);
    }
    20% { 
        opacity: 0.7;
        transform: scaleX(1);
    }
    30% { 
        opacity: 1;
        transform: scaleX(4);
    }
    40% { 
        opacity: 0.4;
        transform: scaleX(1);
    }
    50% { 
        opacity: 0.9;
        transform: scaleX(2);
    }
    60% { 
        opacity: 0.2;
        transform: scaleX(1);
    }
}

.voidShadows {
    position: absolute;
    width: 40px;
    height: 40px;
    background: radial-gradient(circle, rgba(0, 0, 0, 0.8), transparent);
    border-radius: 50%;
    animation: shadowReach 3s infinite ease-in-out;
}

@keyframes shadowReach {
    0%, 100% { 
        transform: scale(1) translate(0, 0);
        opacity: 0.3;
    }
    25% { 
        transform: scale(1.5) translate(-20px, -10px);
        opacity: 0.7;
    }
    50% { 
        transform: scale(2) translate(30px, -20px);
        opacity: 0.5;
    }
    75% { 
        transform: scale(1.2) translate(-10px, 15px);
        opacity: 0.8;
    }
}

.aggressiveFlicker {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(255, 0, 64, 0.1);
    animation: aggressiveFlash 0.15s infinite;
}

@keyframes aggressiveFlash {
    0% { opacity: 0; }
    5% { opacity: 1; background: rgba(255, 0, 64, 0.3); }
    10% { opacity: 0; }
    15% { opacity: 0.8; background: rgba(0, 255, 255, 0.2); }
    20% { opacity: 0; }
    25% { opacity: 1; background: rgba(255, 255, 255, 0.1); }
    30% { opacity: 0; }
}

/* Postcard Effects */
.postcardOverlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    z-index: 5;
}

.metroVeins {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
        linear-gradient(45deg, transparent 45%, rgba(255, 0, 64, 0.1) 47%, rgba(255, 0, 64, 0.1) 53%, transparent 55%),
        linear-gradient(135deg, transparent 45%, rgba(0, 255, 255, 0.1) 47%, rgba(0, 255, 255, 0.1) 53%, transparent 55%),
        linear-gradient(90deg, transparent 48%, rgba(255, 255, 255, 0.05) 49%, rgba(255, 255, 255, 0.05) 51%, transparent 52%),
        linear-gradient(0deg, transparent 48%, rgba(255, 255, 255, 0.05) 49%, rgba(255, 255, 255, 0.05) 51%, transparent 52%);
    background-size: 60px 60px, 80px 80px, 40px 40px, 40px 40px;
    background-position: 0 0, 0 0, 0 0, 0 0;
    animation: metroMapPulse 6s infinite;
}

@keyframes metroMapPulse {
    0% { 
        opacity: 0.3;
        background-position: 0 0, 0 0, 0 0, 0 0;
    }
    50% { 
        opacity: 0.7;
        background-position: 20px 20px, -20px 20px, 10px 10px, -10px -10px;
    }
    100% { 
        opacity: 0.3;
        background-position: 0 0, 0 0, 0 0, 0 0;
    }
}

.cableArteries {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.cableArtery {
    position: absolute;
    width: 2px;
    height: 100%;
    background: linear-gradient(to bottom, 
        transparent 0%, 
        rgba(255, 0, 64, 0.0) 10%,
        rgba(255, 0, 64, 0.3) 30%,
        rgba(0, 255, 255, 0.4) 50%,
        rgba(255, 0, 64, 0.3) 70%,
        rgba(255, 0, 64, 0.0) 90%,
        transparent 100%
    );
    animation: arteryPulse 4s infinite;
}

.cableArtery:nth-child(odd) {
    animation-direction: reverse;
}

.cableArtery:nth-child(3n) {
    background: linear-gradient(to bottom, 
        transparent 0%, 
        rgba(0, 255, 255, 0.0) 10%,
        rgba(0, 255, 255, 0.4) 30%,
        rgba(255, 255, 255, 0.3) 50%,
        rgba(0, 255, 255, 0.4) 70%,
        rgba(0, 255, 255, 0.0) 90%,
        transparent 100%
    );
}

@keyframes arteryPulse {
    0% { 
        transform: scaleY(0.8);
        opacity: 0.4;
    }
    50% { 
        transform: scaleY(1.2);
        opacity: 0.8;
    }
    100% { 
        transform: scaleY(0.8);
        opacity: 0.4;
    }
}

.coldTouch {
    position: absolute;
    top: 20%;
    left: 30%;
    width: 40%;
    height: 60%;
    background: radial-gradient(ellipse at center, 
        rgba(173, 216, 230, 0.1) 0%,
        rgba(173, 216, 230, 0.05) 30%,
        transparent 60%
    );
    animation: coldFingers 8s infinite;
}

@keyframes coldFingers {
    0% { 
        transform: scale(1);
        opacity: 0.2;
    }
    25% { 
        transform: scale(1.1);
        opacity: 0.4;
    }
    50% { 
        transform: scale(0.9);
        opacity: 0.1;
    }
    75% { 
        transform: scale(1.05);
        opacity: 0.3;
    }
    100% { 
        transform: scale(1);
        opacity: 0.2;
    }
}

.birthdayPulse {
    position: absolute;
    bottom: 15%;
    right: 20%;
    width: 100px;
    height: 100px;
    background: radial-gradient(circle, 
        rgba(255, 215, 0, 0.0) 0%,
        rgba(255, 215, 0, 0.1) 30%,
        rgba(255, 215, 0, 0.05) 60%,
        transparent 100%
    );
    border-radius: 50%;
    animation: birthdayGlow 10s infinite;
}

@keyframes birthdayGlow {
    0% { 
        transform: scale(0.8);
        opacity: 0.3;
    }
    30% { 
        transform: scale(1.2);
        opacity: 0.6;
    }
    60% { 
        transform: scale(0.9);
        opacity: 0.2;
    }
    100% { 
        transform: scale(0.8);
        opacity: 0.3;
    }
}

/* Custom scrollbar styling for dialogue box */
.dialogueBox::-webkit-scrollbar {
    width: 8px;
}

.dialogueBox::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.3);
    border-radius: 4px;
}

.dialogueBox::-webkit-scrollbar-thumb {
    background: linear-gradient(180deg, #ff0040, #00ffff);
    border-radius: 4px;
    box-shadow: 0 0 10px rgba(255, 0, 64, 0.5);
}

.dialogueBox::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(180deg, #00ffff, #ff0040);
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.7);
}

/* Performance optimization classes for device profiles */
.lowPerformance {
    /* Reduce visual effects for low-end devices */
    animation-duration: 2s !important;
    filter: none !important;
    box-shadow: none !important;
    backdrop-filter: none !important;
}

.lowPerformance .particle {
    animation-duration: 20s !important;
    box-shadow: 0 0 5px currentColor !important;
}

.lowPerformance .gifImage {
    animation: none !important;
    filter: contrast(1.05) brightness(0.95) !important;
}

.mediumPerformance .particle {
    animation-duration: 15s !important;
}

.highPerformance {
    /* Enhanced effects for high-end devices */
    filter: blur(0.5px) contrast(1.1) !important;
}

/* Preload optimization */
.preloadHidden {
    opacity: 0;
    pointer-events: none;
    position: absolute;
    left: -9999px;
    will-change: auto;
}

/* Mobile void effects */
@media (max-width: 768px) {
    .geometryGlitch {
        transform: scale(0.7);
    }
    
    .digitalFlesh {
        width: 4px;
        height: 4px;
    }
    
    .voidShadows {
        width: 30px;
        height: 30px;
    }
    
    /* Reduce particle count and effects on mobile */
    .particles {
        opacity: 0.7;
    }
    
    .dialogueBox {
        max-height: 300px; /* Smaller dialogue box on mobile */
        padding: 20px;
    }
}