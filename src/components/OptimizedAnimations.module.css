/* 
 * High-Performance CSS Animations for Visual Novel
 * Optimized for GPU acceleration and minimal CPU usage
 */

/* GPU-accelerated particle system */
.particles {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  contain: strict;
  transform: translateZ(0);
  will-change: transform;
}

.particle {
  position: absolute;
  width: 2px;
  height: 2px;
  background: #00ffff;
  border-radius: 50%;
  contain: strict;
  transform: translate3d(0, 0, 0);
  will-change: transform, opacity;
  animation: particleFloat var(--duration, 8s) linear infinite;
  animation-delay: var(--delay, 0s);
  filter: brightness(var(--brightness, 1));
}

@keyframes particleFloat {
  0% {
    transform: translateY(100vh);
    opacity: 0;
  }
  20% {
    opacity: 0.7;
  }
  80% {
    opacity: 0.7;
  }
  100% {
    transform: translateY(-20vh);
    opacity: 0;
  }
}

/* Enhanced glitch overlay using GPU-accelerated transforms */
.glitchOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  contain: strict;
  transform: translateZ(0);
  will-change: transform, opacity;
  background: repeating-linear-gradient(
    0deg,
    transparent,
    transparent 2px,
    rgba(255, 0, 64, 0.015) 2px,
    rgba(255, 0, 64, 0.015) 4px
  );
  animation: glitchDistortion 6s steps(8) infinite;
}

@keyframes glitchDistortion {
  0%, 92%, 100% {
    transform: translateZ(0) skew(0deg);
    opacity: 0;
  }
  93% {
    transform: translateZ(0) skew(1deg) translateX(2px);
    opacity: 0.8;
  }
  94% {
    transform: translateZ(0) skew(-1deg) translateX(-2px);
    opacity: 0.6;
  }
  95% {
    transform: translateZ(0) skew(2deg) translateX(1px);
    opacity: 0.9;
  }
  96% {
    transform: translateZ(0) skew(0deg);
    opacity: 0;
  }
}

/* Electrical effects using CSS transforms only */
.electricalOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  contain: strict;
  transform: translateZ(0);
}

.circuitLines {
  position: absolute;
  width: 100%;
  height: 100%;
  background: 
    linear-gradient(90deg, transparent 49%, rgba(0, 255, 255, 0.1) 50%, transparent 51%),
    linear-gradient(0deg, transparent 49%, rgba(0, 255, 255, 0.05) 50%, transparent 51%);
  background-size: 50px 50px;
  animation: circuitPulse 4s ease-in-out infinite;
  transform: translateZ(0);
}

@keyframes circuitPulse {
  0%, 100% {
    opacity: 0.3;
    transform: translateZ(0) scale(1);
  }
  50% {
    opacity: 0.7;
    transform: translateZ(0) scale(1.02);
  }
}

.electricPulse {
  position: absolute;
  width: 200px;
  height: 200px;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(0, 255, 255, 0.3) 0%, transparent 70%);
  transform: translate3d(-50%, -50%, 0);
  animation: electricPulseAnim 2s ease-in-out infinite;
  left: var(--pulse-x, 50%);
  top: var(--pulse-y, 50%);
}

@keyframes electricPulseAnim {
  0%, 100% {
    transform: translate3d(-50%, -50%, 0) scale(0.5);
    opacity: 0;
  }
  50% {
    transform: translate3d(-50%, -50%, 0) scale(1.5);
    opacity: 1;
  }
}

.electricSparks {
  position: absolute;
  width: 4px;
  height: 4px;
  background: #00ffff;
  border-radius: 50%;
  animation: sparkle 1.5s ease-in-out infinite;
  transform: translateZ(0);
  box-shadow: 0 0 8px #00ffff;
}

@keyframes sparkle {
  0%, 100% {
    transform: translateZ(0) scale(0);
    opacity: 0;
  }
  20% {
    transform: translateZ(0) scale(1.2);
    opacity: 1;
  }
  80% {
    transform: translateZ(0) scale(0.8);
    opacity: 1;
  }
}

/* Mirror effects using 3D transforms */
.mirrorOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  contain: strict;
  transform: translateZ(0);
  perspective: 1000px;
}

.mirrorFragment {
  position: absolute;
  width: 100px;
  height: 100px;
  background: linear-gradient(45deg, 
    rgba(255, 255, 255, 0.1) 0%, 
    rgba(255, 255, 255, 0.05) 50%, 
    transparent 100%);
  transform: rotateY(45deg) rotateX(25deg) translateZ(0);
  animation: mirrorShatter 3s ease-in-out infinite;
}

.mirrorFragment:nth-child(1) {
  top: 20%;
  left: 10%;
  animation-delay: 0s;
}

.mirrorFragment:nth-child(2) {
  top: 40%;
  right: 15%;
  animation-delay: 0.5s;
}

.mirrorFragment:nth-child(3) {
  bottom: 30%;
  left: 20%;
  animation-delay: 1s;
}

.mirrorFragment:nth-child(4) {
  bottom: 20%;
  right: 25%;
  animation-delay: 1.5s;
}

@keyframes mirrorShatter {
  0%, 90%, 100% {
    transform: rotateY(45deg) rotateX(25deg) translateZ(0) scale(1);
    opacity: 0.3;
  }
  10% {
    transform: rotateY(90deg) rotateX(45deg) translateZ(20px) scale(1.2);
    opacity: 0.8;
  }
  20% {
    transform: rotateY(135deg) rotateX(15deg) translateZ(-10px) scale(0.9);
    opacity: 0.6;
  }
}

.reflectionRipple {
  position: absolute;
  width: 300px;
  height: 300px;
  border: 2px solid rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  transform: translate3d(-50%, -50%, 0);
  animation: rippleExpand 4s ease-out infinite;
  left: 50%;
  top: 50%;
}

.reflectionRipple:nth-child(2) {
  animation-delay: 1.3s;
}

.reflectionRipple:nth-child(3) {
  animation-delay: 2.6s;
}

@keyframes rippleExpand {
  0% {
    transform: translate3d(-50%, -50%, 0) scale(0);
    opacity: 1;
  }
  100% {
    transform: translate3d(-50%, -50%, 0) scale(3);
    opacity: 0;
  }
}

.identityShatter {
  position: absolute;
  width: 100%;
  height: 100%;
  background: 
    linear-gradient(45deg, transparent 48%, rgba(255, 255, 255, 0.1) 49%, rgba(255, 255, 255, 0.1) 51%, transparent 52%),
    linear-gradient(-45deg, transparent 48%, rgba(255, 255, 255, 0.05) 49%, rgba(255, 255, 255, 0.05) 51%, transparent 52%);
  background-size: 80px 80px;
  animation: shatterMove 6s linear infinite;
  transform: translateZ(0);
}

@keyframes shatterMove {
  0% {
    transform: translateZ(0) translateX(0) translateY(0);
    opacity: 0;
  }
  25% {
    opacity: 0.5;
    transform: translateZ(0) translateX(10px) translateY(-5px);
  }
  75% {
    opacity: 0.5;
    transform: translateZ(0) translateX(-10px) translateY(5px);
  }
  100% {
    transform: translateZ(0) translateX(0) translateY(0);
    opacity: 0;
  }
}

/* Void effects using GPU layers */
.voidOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  contain: strict;
  transform: translateZ(0);
  perspective: 1000px;
}

.geometryGlitch {
  position: absolute;
  width: 150px;
  height: 150px;
  background: linear-gradient(45deg, 
    rgba(255, 0, 64, 0.1) 0%, 
    transparent 50%, 
    rgba(0, 255, 255, 0.1) 100%);
  transform: rotateZ(45deg) rotateX(30deg) translateZ(0);
  animation: geometryTwist 5s ease-in-out infinite;
}

.geometryGlitch:nth-child(1) {
  top: 10%;
  left: 20%;
  animation-delay: 0s;
}

.geometryGlitch:nth-child(2) {
  top: 60%;
  right: 10%;
  animation-delay: 1.7s;
}

.geometryGlitch:nth-child(3) {
  bottom: 15%;
  left: 50%;
  animation-delay: 3.4s;
}

@keyframes geometryTwist {
  0%, 100% {
    transform: rotateZ(45deg) rotateX(30deg) rotateY(0deg) translateZ(0);
    opacity: 0.2;
  }
  33% {
    transform: rotateZ(135deg) rotateX(60deg) rotateY(90deg) translateZ(10px);
    opacity: 0.6;
  }
  66% {
    transform: rotateZ(225deg) rotateX(-30deg) rotateY(180deg) translateZ(-5px);
    opacity: 0.4;
  }
}

.realityTear {
  position: absolute;
  width: 3px;
  height: 80vh;
  background: linear-gradient(180deg, 
    transparent 0%, 
    rgba(255, 0, 64, 0.8) 20%, 
    rgba(255, 0, 64, 0.9) 50%, 
    rgba(255, 0, 64, 0.8) 80%, 
    transparent 100%);
  transform: translateZ(0) skewX(15deg);
  animation: tearGlitch 3s steps(6) infinite;
  box-shadow: 0 0 10px rgba(255, 0, 64, 0.5);
}

@keyframes tearGlitch {
  0%, 85%, 100% {
    transform: translateZ(0) skewX(15deg) scaleX(1);
    opacity: 0.7;
  }
  86% {
    transform: translateZ(0) skewX(-15deg) scaleX(1.5);
    opacity: 1;
  }
  88% {
    transform: translateZ(0) skewX(25deg) scaleX(0.5);
    opacity: 0.9;
  }
}

.digitalFlesh {
  position: absolute;
  width: 8px;
  height: 8px;
  background: radial-gradient(circle, rgba(255, 0, 64, 0.8) 0%, transparent 70%);
  border-radius: 50%;
  animation: fleshPulse 2s ease-in-out infinite;
  transform: translateZ(0);
}

@keyframes fleshPulse {
  0%, 100% {
    transform: translateZ(0) scale(0.5);
    opacity: 0.3;
  }
  50% {
    transform: translateZ(0) scale(1.5);
    opacity: 0.9;
  }
}

.voidShadows {
  position: absolute;
  width: 60px;
  height: 60px;
  background: radial-gradient(ellipse, rgba(0, 0, 0, 0.8) 0%, transparent 70%);
  border-radius: 50%;
  animation: shadowDrift 8s ease-in-out infinite;
  transform: translateZ(0);
  filter: blur(2px);
}

@keyframes shadowDrift {
  0%, 100% {
    transform: translateZ(0) translateY(0) scale(1);
    opacity: 0.5;
  }
  25% {
    transform: translateZ(0) translateY(-20px) scale(1.2);
    opacity: 0.8;
  }
  50% {
    transform: translateZ(0) translateY(10px) scale(0.8);
    opacity: 0.3;
  }
  75% {
    transform: translateZ(0) translateY(-10px) scale(1.1);
    opacity: 0.7;
  }
}

.aggressiveFlicker {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 0, 64, 0.1);
  animation: aggressiveFlash 0.3s steps(3) infinite;
  transform: translateZ(0);
}

@keyframes aggressiveFlash {
  0%, 60%, 100% {
    opacity: 0;
  }
  20%, 40% {
    opacity: 1;
  }
}

/* Postcard effects */
.postcardOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  contain: strict;
  transform: translateZ(0);
}

.metroVeins {
  position: absolute;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(ellipse at 20% 30%, rgba(255, 0, 64, 0.1) 0%, transparent 50%),
    radial-gradient(ellipse at 80% 70%, rgba(0, 255, 255, 0.1) 0%, transparent 50%),
    linear-gradient(45deg, transparent 48%, rgba(255, 0, 64, 0.05) 49%, rgba(255, 0, 64, 0.05) 51%, transparent 52%);
  background-size: 300px 300px, 200px 200px, 60px 60px;
  animation: veinsFlow 8s linear infinite;
  transform: translateZ(0);
}

@keyframes veinsFlow {
  0% {
    transform: translateZ(0) translate(0, 0);
  }
  100% {
    transform: translateZ(0) translate(-60px, -60px);
  }
}

.cableArteries {
  position: absolute;
  width: 100%;
  height: 100%;
  transform: translateZ(0);
}

.cableArtery {
  position: absolute;
  width: 2px;
  height: 100%;
  background: linear-gradient(180deg, 
    transparent 0%, 
    rgba(255, 0, 64, 0.3) 30%, 
    rgba(255, 0, 64, 0.6) 50%, 
    rgba(255, 0, 64, 0.3) 70%, 
    transparent 100%);
  animation: arteryPulse 3s ease-in-out infinite;
  transform: translateZ(0);
}

@keyframes arteryPulse {
  0%, 100% {
    transform: translateZ(0) scaleY(1);
    opacity: 0.4;
  }
  50% {
    transform: translateZ(0) scaleY(1.1);
    opacity: 0.8;
  }
}

.coldTouch {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 200px;
  height: 200px;
  border: 2px solid rgba(0, 255, 255, 0.3);
  border-radius: 50%;
  transform: translate3d(-50%, -50%, 0);
  animation: coldRipple 4s ease-out infinite;
}

@keyframes coldRipple {
  0% {
    transform: translate3d(-50%, -50%, 0) scale(0.5);
    opacity: 0.8;
    border-color: rgba(0, 255, 255, 0.6);
  }
  100% {
    transform: translate3d(-50%, -50%, 0) scale(2);
    opacity: 0;
    border-color: rgba(0, 255, 255, 0.1);
  }
}

.birthdayPulse {
  position: absolute;
  top: 30%;
  left: 30%;
  width: 40%;
  height: 40%;
  background: radial-gradient(circle, rgba(255, 215, 0, 0.2) 0%, transparent 70%);
  border-radius: 50%;
  animation: birthdayGlow 2s ease-in-out infinite;
  transform: translateZ(0);
}

@keyframes birthdayGlow {
  0%, 100% {
    transform: translateZ(0) scale(0.8);
    opacity: 0.3;
  }
  50% {
    transform: translateZ(0) scale(1.2);
    opacity: 0.7;
  }
}

/* Performance optimizations for low-end devices */
.lowPerformance .particle {
  animation-duration: 4s !important;
}

.lowPerformance .glitchOverlay,
.lowPerformance .electricalOverlay,
.lowPerformance .mirrorOverlay,
.lowPerformance .voidOverlay,
.lowPerformance .postcardOverlay {
  display: none;
}

.mediumPerformance .particle:nth-child(n+15) {
  display: none;
}

.mediumPerformance .geometryGlitch:nth-child(n+2),
.mediumPerformance .mirrorFragment:nth-child(n+3) {
  display: none;
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .particle,
  .glitchOverlay,
  .electricPulse,
  .electricSparks,
  .mirrorFragment,
  .reflectionRipple,
  .identityShatter,
  .geometryGlitch,
  .realityTear,
  .digitalFlesh,
  .voidShadows,
  .aggressiveFlicker,
  .metroVeins,
  .cableArtery,
  .coldTouch,
  .birthdayPulse {
    animation: none !important;
  }
}

/* Force GPU layers for better performance */
.particle,
.glitchOverlay,
.electricPulse,
.electricSparks,
.mirrorFragment,
.geometryGlitch,
.realityTear,
.digitalFlesh,
.voidShadows,
.metroVeins,
.cableArtery,
.coldTouch,
.birthdayPulse {
  transform: translateZ(0);
  will-change: transform, opacity;
  backface-visibility: hidden;
}